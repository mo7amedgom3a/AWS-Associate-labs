name: Deploy Django App to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  EC2_HOST: 52.55.35.4
  EC2_USER: ec2-user
  ANSIBLE_DIR: Week2/ec2-layer/ansible

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

  deploy:
    needs: test
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    # - name: Setup SSH directory and key
    #   run: |
    #     mkdir -p ~/.ssh
    #     echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/aws_keys.pem
    #     chmod 600 ~/.ssh/aws_keys.pem
    #     ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts
    #     echo "SSH key setup completed"
    #     echo "SSH key permissions: $(ls -la ~/.ssh/aws_keys.pem)"


    - name: Test Ansible connection
      run: |
        cd ${{ env.ANSIBLE_DIR }}
        ansible all -m ping -i inventory.yml

    - name: Run Ansible deployment
      run: |
        cd ${{ env.ANSIBLE_DIR }}
        echo "Current directory: $(pwd)"
        echo "Files in current directory: $(ls -la)"
        ansible-playbook deploy_django.yml -i inventory.yml

    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 60

    - name: Verify deployment
      run: |
        # Test Django app
        curl -f -I http://${{ env.EC2_HOST }}/api/users/ || exit 1

   
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ Deployment successful!"
          echo "üåê Django app is running at http://${{ env.EC2_HOST }}"
          echo "üîß Admin interface: http://${{ env.EC2_HOST }}/api/users/"
        else
          echo "‚ùå Deployment failed!"
        fi
